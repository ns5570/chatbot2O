{"version":3,"sources":["Chatbot.js","App.js","reportWebVitals.js","index.js"],"names":["ChatbotComponent","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","React","createElement","className","ChatBot","headerTitle","steps","id","message","trigger","user","validator","lowerValue","toLowerCase","includes","Component","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sRA4DeA,EAzDO,SAAAC,GAAA,SAAAD,IAAA,OAAAE,YAAAC,KAAAH,GAAAI,YAAAD,KAAAE,YAAAL,GAAAM,MAAAH,KAAAI,YAsDnB,OAtDmBC,YAAAR,EAAAC,GAAAQ,YAAAT,EAAA,EAAAU,IAAA,SAAAC,MAAA,WA8ClB,OACEC,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAACE,IAAO,CACNC,YAAY,aACZC,MAhDQ,CACZ,CACEC,GAAI,IACJC,QAAS,yBACTC,QAAS,KAEX,CACEF,GAAI,IACJC,QAAS,8BACTC,QAAS,aAEX,CACEF,GAAI,YACJG,MAAM,EACND,QAAS,YAEX,CACEF,GAAI,WACJG,MAAM,EACNC,UAAW,SAACX,GAEV,IAAMY,EAAaZ,EAAMa,cAEzB,OAAID,EAAWE,SAAS,SACf,eACEF,EAAWE,SAAS,QACtB,2GACEF,EAAWE,SAAS,WACtB,qDACEF,EAAWE,SAAS,QACtB,oEAEA,2EAGXL,QAAS,sBAEX,CACEF,GAAI,qBACJC,QAAS,+CACTC,QAAS,qBAYdpB,EAtDmB,CAAS0B,aCehBC,MAbf,WACE,OACEf,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAChBF,IAAAC,cAAA,UAAI,kBAEND,IAAAC,cAAA,QAAMC,UAAU,YACdF,IAAAC,cAACb,EAAgB,SCAV4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjC,IAAAC,cAACD,IAAMkC,WAAU,KACflC,IAAAC,cAACc,EAAG,QAORC","file":"static/js/main.62d657cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ChatBot from 'react-simple-chatbot';\n\nclass ChatbotComponent extends Component {\n  render() {\n    const steps = [\n      {\n        id: '1',\n        message: 'Welcome to My Chatbot!',\n        trigger: '2',\n      },\n      {\n        id: '2',\n        message: 'How can I assist you today?',\n        trigger: 'userInput',\n      },\n      {\n        id: 'userInput',\n        user: true,\n        trigger: 'response',\n      },\n      {\n        id: 'response',\n        user: true,\n        validator: (value) => {\n          // Define custom logic to handle user input and generate responses\n          const lowerValue = value.toLowerCase();\n\n          if (lowerValue.includes('hello')) {\n            return 'Hello there!';\n          } else if (lowerValue.includes('help')) {\n            return 'Sure, I can help with various tasks. You can ask me questions, get weather updates, or even tell a joke!';\n          } else if (lowerValue.includes('weather')) {\n            return 'The weather today is sunny with a high of 75Â°F.';\n          } else if (lowerValue.includes('joke')) {\n            return 'Why did the developer go broke? Because he used up all his cache!';\n          } else {\n            return \"I'm sorry, I didn't understand that request. Please ask something else.\";\n          }\n        },\n        trigger: 'additionalCommands',\n      },\n      {\n        id: 'additionalCommands',\n        message: 'Is there anything else you would like to do?',\n        trigger: 'userInput',\n      },\n    ];\n\n    return (\n      <div className=\"chatbot-container\">\n        <ChatBot\n          headerTitle=\"My Chatbot\"\n          steps={steps}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ChatbotComponent;\n","import React from 'react';\nimport './App.css';\nimport ChatbotComponent from './Chatbot';\n// import ExpenseTracker from './Expense';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>React Chatbot</h1>\n      </header>\n      <main className=\"App-main\">\n        <ChatbotComponent />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}